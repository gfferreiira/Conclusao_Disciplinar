// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoInterDisciplinar.Data;

#nullable disable

namespace ProjetoInterDisciplinar.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Conclusao_Disciplinar.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Latitude = -23.520024100000001,
                            Longitude = -46.596497999999997,
                            PasswordHash = new byte[] { 118, 214, 200, 11, 163, 56, 77, 141, 86, 72, 81, 197, 12, 87, 152, 205, 160, 244, 227, 150, 175, 84, 125, 102, 102, 90, 177, 175, 150, 153, 112, 237, 66, 68, 41, 184, 49, 206, 150, 166, 187, 89, 250, 228, 109, 96, 93, 127, 141, 252, 19, 171, 250, 180, 152, 196, 220, 230, 46, 17, 154, 47, 26, 126 },
                            PasswordSalt = new byte[] { 235, 132, 167, 82, 78, 86, 26, 67, 35, 195, 61, 247, 172, 164, 94, 48, 67, 50, 106, 76, 66, 217, 231, 61, 134, 40, 171, 240, 88, 109, 40, 173, 212, 226, 55, 248, 226, 43, 146, 27, 57, 69, 126, 198, 179, 85, 190, 109, 239, 22, 177, 39, 84, 131, 137, 210, 149, 104, 71, 99, 56, 207, 184, 147, 140, 125, 134, 190, 214, 253, 170, 122, 170, 42, 177, 72, 150, 142, 82, 27, 180, 201, 244, 168, 215, 102, 229, 31, 160, 122, 159, 128, 84, 130, 16, 17, 248, 62, 145, 101, 172, 58, 227, 203, 188, 95, 68, 108, 14, 136, 76, 217, 207, 79, 207, 203, 166, 102, 172, 24, 185, 228, 214, 206, 56, 19, 238, 107 },
                            Perfil = "Admin",
                            UserName = "UsuarioAdmin"
                        });
                });

            modelBuilder.Entity("ProjetoInterDisciplinar.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Funcao")
                        .HasColumnType("int");

                    b.Property<int>("HorasDeServico")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_FUNCIONARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Funcao = 2,
                            HorasDeServico = 8,
                            Nome = "Guilherme"
                        },
                        new
                        {
                            Id = 2,
                            Funcao = 6,
                            HorasDeServico = 8,
                            Nome = "Jessica"
                        },
                        new
                        {
                            Id = 3,
                            Funcao = 1,
                            HorasDeServico = 8,
                            Nome = "Leonardo"
                        },
                        new
                        {
                            Id = 4,
                            Funcao = 3,
                            HorasDeServico = 8,
                            Nome = "Lucas"
                        },
                        new
                        {
                            Id = 5,
                            Funcao = 4,
                            HorasDeServico = 8,
                            Nome = "Rogerio"
                        },
                        new
                        {
                            Id = 6,
                            Funcao = 5,
                            HorasDeServico = 8,
                            Nome = "Cleber Machado"
                        });
                });

            modelBuilder.Entity("ProjetoInterDisciplinar.Models.Funcionario", b =>
                {
                    b.HasOne("Conclusao_Disciplinar.Models.Usuario", null)
                        .WithMany("Personagens")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Conclusao_Disciplinar.Models.Usuario", b =>
                {
                    b.Navigation("Personagens");
                });
#pragma warning restore 612, 618
        }
    }
}
