// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoInterDisciplinar.Data;

#nullable disable

namespace ProjetoInterDisciplinar.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240625235338_FuncionarioCreate")]
    partial class FuncionarioCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Conclusao_Disciplinar.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Latitude = -23.520024100000001,
                            Longitude = -46.596497999999997,
                            PasswordHash = new byte[] { 113, 139, 80, 147, 200, 251, 124, 104, 28, 193, 135, 252, 171, 176, 73, 132, 222, 114, 36, 26, 109, 245, 83, 71, 204, 172, 35, 91, 6, 223, 96, 196, 217, 165, 95, 113, 153, 45, 220, 58, 220, 172, 246, 10, 130, 59, 141, 194, 117, 63, 202, 244, 150, 182, 4, 145, 19, 221, 20, 220, 15, 147, 206, 130 },
                            PasswordSalt = new byte[] { 37, 219, 75, 211, 218, 190, 252, 26, 106, 187, 105, 46, 238, 179, 99, 126, 7, 93, 13, 79, 44, 156, 197, 77, 96, 114, 212, 145, 93, 48, 136, 112, 200, 90, 199, 28, 205, 244, 203, 138, 5, 189, 152, 105, 181, 179, 95, 215, 144, 210, 188, 150, 45, 149, 16, 58, 32, 102, 224, 168, 77, 175, 20, 183, 74, 110, 76, 18, 9, 238, 127, 91, 238, 18, 18, 230, 21, 32, 168, 247, 244, 154, 101, 223, 216, 12, 111, 26, 215, 99, 188, 88, 132, 201, 237, 95, 112, 118, 1, 152, 82, 236, 171, 161, 41, 221, 52, 195, 201, 136, 89, 144, 8, 183, 26, 30, 144, 180, 77, 143, 187, 104, 149, 175, 252, 205, 25, 119 },
                            Perfil = "Admin",
                            UserName = "UsuarioAdmin"
                        });
                });

            modelBuilder.Entity("ProjetoInterDisciplinar.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Funcao")
                        .HasColumnType("int");

                    b.Property<int>("HorasDeServico")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_FUNCIONARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Funcao = 2,
                            HorasDeServico = 8,
                            Nome = "Guilherme"
                        },
                        new
                        {
                            Id = 2,
                            Funcao = 6,
                            HorasDeServico = 8,
                            Nome = "Jessica"
                        },
                        new
                        {
                            Id = 3,
                            Funcao = 1,
                            HorasDeServico = 8,
                            Nome = "Leonardo"
                        },
                        new
                        {
                            Id = 4,
                            Funcao = 3,
                            HorasDeServico = 8,
                            Nome = "Lucas"
                        },
                        new
                        {
                            Id = 5,
                            Funcao = 4,
                            HorasDeServico = 8,
                            Nome = "Rogerio"
                        },
                        new
                        {
                            Id = 6,
                            Funcao = 5,
                            HorasDeServico = 8,
                            Nome = "Cleber Machado"
                        });
                });

            modelBuilder.Entity("ProjetoInterDisciplinar.Models.Funcionario", b =>
                {
                    b.HasOne("Conclusao_Disciplinar.Models.Usuario", null)
                        .WithMany("Personagens")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Conclusao_Disciplinar.Models.Usuario", b =>
                {
                    b.Navigation("Personagens");
                });
#pragma warning restore 612, 618
        }
    }
}
